/* Generated By:JavaCC: Do not edit this line. PDDL21Parser.java */
package edu.asu.sapa.parsing;

import edu.asu.sapa.lifted.*;
import edu.asu.sapa.ground.GoalDep;
import edu.asu.sapa.muri.*;

import java.util.*;

public class PDDL21Parser implements PDDL21ParserConstants {
        public static ProblemFacade prob=new ProblemFacade();
        public static Action act;
        public static Scope scope;

/*******************************************************************/
  static final public void parse_domain_pddl() throws ParseException {
    ArrayList<Type> v = new ArrayList<Type>();
    String n;
    Type t,type=prob.obj;

    scope = prob;
    jj_consume_token(OPENBRACE);
    jj_consume_token(DEFINE);
    DomainName();
    if (jj_2_1(3)) {
      Requirements();
    } else {
      ;
    }
    if (jj_2_2(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(TYPES);
      Types();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_3(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(CONSTANTS);
      TypedList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_4(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(PREDICATES);
      PredicateList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_5(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(FUNCTION);
      FunctionList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    ActionList();
    jj_consume_token(CLOSEBRACE);
  }

  static final public void parse_problem_pddl() throws ParseException {
        String n;
    ArrayList<String> v = new ArrayList<String>();
        String type;

        MathForm time;
        MathForm m=null, mpenalty=null;
    Predicate p;
    Function f;

    float goalTime=Float.POSITIVE_INFINITY;
    float penalty = 0;
        boolean gIsHard=true;
        boolean guIsConstant=true;
        float util=0;
        LiftedSet s;

    ArrayList<Predicate> pList = new ArrayList<Predicate>();
    ArrayList<LiftedGoal> goals;

    scope = prob;
    jj_consume_token(OPENBRACE);
    jj_consume_token(DEFINE);
    ProblemName();
    jj_consume_token(OPENBRACE);
    jj_consume_token(DOMAIN_TAG);
    n = Name();
    jj_consume_token(CLOSEBRACE);
                                                     prob.setDomainLink(n);
    if (jj_2_6(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(OBJECT);
      TypedList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_17(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(INIT);
      label_1:
      while (true) {
        if (jj_2_7(3)) {
          ;
        } else {
          break label_1;
        }
        if (jj_2_13(3)) {
          p = Predicate();
                                  prob.addInitialAdd(p);
        } else if (jj_2_14(3)) {
          jj_consume_token(OPENBRACE);
          jj_consume_token(NOT);
          p = Predicate();
          jj_consume_token(CLOSEBRACE);
                                                                 prob.addInitialDelete(p);
        } else if (jj_2_15(3)) {
          jj_consume_token(OPENBRACE);
          if (jj_2_8(3)) {
            jj_consume_token(EQUAL);
          } else if (jj_2_9(3)) {
            jj_consume_token(ASSIGN);
          } else {
            jj_consume_token(-1);
            throw new ParseException();
          }
          f = Function();
          m = MathForm();
          jj_consume_token(CLOSEBRACE);
                                  prob.addInitialSet(f,m);
        } else if (jj_2_16(3)) {
          jj_consume_token(OPENBRACE);
          jj_consume_token(AT);
          time = MathForm();
          if (jj_2_10(3)) {
            p = Predicate();
                                         prob.addInitialAdd(p, time);
          } else if (jj_2_11(3)) {
            jj_consume_token(OPENBRACE);
            jj_consume_token(NOT);
            p = Predicate();
            jj_consume_token(CLOSEBRACE);
                                                                         prob.addInitialDelete(p, time);
          } else if (jj_2_12(3)) {
            s = getSet();
                                      prob.addInitialSet(s,time);
          } else {
            jj_consume_token(-1);
            throw new ParseException();
          }
          jj_consume_token(CLOSEBRACE);
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_18(3)) {
      jj_consume_token(OPENBRACE);
      goals = goals();
        for (LiftedGoal g : goals) {
                prob.addGoal(g);
        }
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_19(3)) {
      OpenWorldKnowledge();
    } else {
      ;
    }
    if (jj_2_22(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(METRIC);
      if (jj_2_20(3)) {
        jj_consume_token(MINIMIZE);
      } else if (jj_2_21(3)) {
        jj_consume_token(MAXIMIZE);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      m = MathForm();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    jj_consume_token(CLOSEBRACE);
  }

  static final public void OpenWorldKnowledge() throws ParseException {
//	ArrayList<Symbol<String>> uniVars = new ArrayList<Symbol<String>>();
        ArrayList<Symbol<String>> uniVars = new ArrayList<Symbol<String>>();
        ArrayList<Symbol<String>> existVars = new ArrayList<Symbol<String>>();
        ArrayList<Predicate> knowledge = new ArrayList<Predicate>();
        ArrayList<LiftedGoal> liftedGoals = null;
        Predicate sp=null,p,g;
    jj_consume_token(OPENBRACE);
    jj_consume_token(OPEN);
    label_2:
    while (true) {
      if (jj_2_23(3)) {
        ;
      } else {
        break label_2;
      }
      jj_consume_token(OPENBRACE);
      jj_consume_token(FORALL);
      uniVars = TypedList();
      if (jj_2_29(3)) {
        jj_consume_token(OPENBRACE);
        jj_consume_token(SENSE);
        existVars = TypedList();
        sp = Predicate();
        if (jj_2_27(3)) {
          if (jj_2_24(3)) {
            jj_consume_token(OPENBRACE);
            jj_consume_token(AND);
          } else {
            ;
          }
          label_3:
          while (true) {
            p = Predicate();
                                               knowledge.add(p);
            if (jj_2_25(3)) {
              ;
            } else {
              break label_3;
            }
          }
          if (jj_2_26(3)) {
            jj_consume_token(CLOSEBRACE);
          } else {
            ;
          }
        } else {
          ;
        }
        if (jj_2_28(3)) {
          jj_consume_token(OPENBRACE);
          liftedGoals = goals();
          jj_consume_token(CLOSEBRACE);
        } else {
          ;
        }
        jj_consume_token(CLOSEBRACE);
      } else {
        ;
      }
      jj_consume_token(CLOSEBRACE);
    }
          prob.addSensingRule((Variable)existVars.get(0), sp, knowledge, liftedGoals.get(0));
    jj_consume_token(CLOSEBRACE);
  }

  static final public ArrayList<LiftedGoal> goals() throws ParseException {
        ArrayList<LiftedGoal> goals = new ArrayList<LiftedGoal>();
        LiftedGoal g;
    jj_consume_token(GOAL);
    if (jj_2_30(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AND);
    } else {
      ;
    }
    label_4:
    while (true) {
      if (jj_2_31(3)) {
        ;
      } else {
        break label_4;
      }
      g = goal();
                  goals.add(g);
    }
    if (jj_2_32(3)) {
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
        {if (true) return goals;}
    throw new Error("Missing return statement in function");
  }

  static final public LiftedGoal goal() throws ParseException {
    float goalTime=Float.POSITIVE_INFINITY;
    float penalty = 0;
        boolean gIsHard=true;
        boolean guIsConstant=true;
        float util=0;
        MathForm m=null, mpenalty=null;
    Predicate p;

        LiftedGoal g;
    if (jj_2_51(3)) {
      p = Predicate();
                           goalTime = Float.POSITIVE_INFINITY;
      if (jj_2_38(3)) {
        jj_consume_token(OPENBRACKET);
        if (jj_2_33(3)) {
          util = Number();
        } else if (jj_2_34(3)) {
          m = MathForm();
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        if (jj_2_37(3)) {
          jj_consume_token(COMMA);
          if (jj_2_35(3)) {
            penalty = Number();
          } else if (jj_2_36(3)) {
            mpenalty = MathForm();
          } else {
            jj_consume_token(-1);
            throw new ParseException();
          }
        } else {
          ;
        }
        jj_consume_token(CLOSEBRACKET);
      } else {
        ;
      }
      if (jj_2_41(3)) {
        jj_consume_token(MINUS);
                     gIsHard=true;
        if (jj_2_39(3)) {
          jj_consume_token(HARD);
        } else if (jj_2_40(3)) {
          jj_consume_token(SOFT);
                                   gIsHard=false;
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      } else {
        ;
      }
    } else if (jj_2_52(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AT);
      goalTime = Number();
      p = Predicate();
      if (jj_2_47(3)) {
        jj_consume_token(OPENBRACKET);
        if (jj_2_42(3)) {
          util = Number();
        } else if (jj_2_43(3)) {
          m = MathForm();
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        if (jj_2_46(3)) {
          jj_consume_token(COMMA);
          if (jj_2_44(3)) {
            penalty = Number();
          } else if (jj_2_45(3)) {
            mpenalty = MathForm();
          } else {
            jj_consume_token(-1);
            throw new ParseException();
          }
        } else {
          ;
        }
        jj_consume_token(CLOSEBRACKET);
      } else {
        ;
      }
      if (jj_2_50(3)) {
        jj_consume_token(MINUS);
                     gIsHard=true;
        if (jj_2_48(3)) {
          jj_consume_token(HARD);
        } else if (jj_2_49(3)) {
          jj_consume_token(SOFT);
                                   gIsHard=false;
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      } else {
        ;
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                {if (true) return new LiftedGoal(p,goalTime,gIsHard,guIsConstant,util,m,penalty,mpenalty);}
    throw new Error("Missing return statement in function");
  }

  static final public Problem parse_update() throws ParseException {
        String n;
    ArrayList<String> v = new ArrayList<String>();
        String type;

        MathForm time;
        float currTime = 0.0f;
        MathForm m=null, mpenalty=null;
    Predicate p;
    Function f;
    float now;
    float goalTime=Float.POSITIVE_INFINITY;
        boolean gIsHard=true;
        boolean guIsConstant=true;
        float util=0;
        float penalty=0;
        float cost=0;
        LiftedSet s;

    ArrayList<Predicate> pList = new ArrayList<Predicate>();
    ArrayList<LiftedGoal> goals = null; // new ArrayList<LiftedGoal>();
    scope = prob;
    if (jj_2_80(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(UPDATE);
      label_5:
      while (true) {
        if (jj_2_53(3)) {
          ;
        } else {
          break label_5;
        }
        if (jj_2_74(3)) {
          jj_consume_token(OBJECT);
          TypedList();
        } else if (jj_2_75(3)) {
          jj_consume_token(EVENT);
          label_6:
          while (true) {
            if (jj_2_54(3)) {
              ;
            } else {
              break label_6;
            }
            if (jj_2_60(3)) {
              p = Predicate();
                              prob.addInitialAdd(p);
            } else if (jj_2_61(3)) {
              jj_consume_token(OPENBRACE);
              jj_consume_token(NOT);
              p = Predicate();
              jj_consume_token(CLOSEBRACE);
                                                            prob.addInitialDelete(p);
            } else if (jj_2_62(3)) {
              jj_consume_token(OPENBRACE);
              if (jj_2_55(3)) {
                jj_consume_token(EQUAL);
              } else if (jj_2_56(3)) {
                jj_consume_token(ASSIGN);
              } else {
                jj_consume_token(-1);
                throw new ParseException();
              }
              f = Function();
              m = MathForm();
              jj_consume_token(CLOSEBRACE);
                          prob.addInitialSet(f,m);
            } else if (jj_2_63(3)) {
              jj_consume_token(OPENBRACE);
              jj_consume_token(AT);
              time = MathForm();
              if (jj_2_57(3)) {
                p = Predicate();
                                 prob.addInitialAdd(p, time);
              } else if (jj_2_58(3)) {
                jj_consume_token(OPENBRACE);
                jj_consume_token(NOT);
                p = Predicate();
                jj_consume_token(CLOSEBRACE);
                                                                 prob.addInitialDelete(p, time);
              } else if (jj_2_59(3)) {
                s = getSet();
                              prob.addInitialSet(s,time);
              } else {
                jj_consume_token(-1);
                throw new ParseException();
              }
              jj_consume_token(CLOSEBRACE);
            } else {
              jj_consume_token(-1);
              throw new ParseException();
            }
          }
        } else if (jj_2_76(3)) {
          goals = goals();
                for (LiftedGoal g : goals) {
                        prob.addGoal(g);
                }
        } else if (jj_2_77(3)) {
          OpenWorldKnowledge();
        } else if (jj_2_78(3)) {
          jj_consume_token(COST);
          cost = Number();
        } else if (jj_2_79(3)) {
          jj_consume_token(NOW);
          now = Number();
          if (jj_2_73(3)) {
            jj_consume_token(OPENBRACE);
                           prob.clearInit();
            label_7:
            while (true) {
              if (jj_2_64(3)) {
                ;
              } else {
                break label_7;
              }
              if (jj_2_70(3)) {
                p = Predicate();
                              prob.addInitialAdd(p);
              } else if (jj_2_71(3)) {
                jj_consume_token(OPENBRACE);
                if (jj_2_65(3)) {
                  jj_consume_token(EQUAL);
                } else if (jj_2_66(3)) {
                  jj_consume_token(ASSIGN);
                } else {
                  jj_consume_token(-1);
                  throw new ParseException();
                }
                f = Function();
                m = MathForm();
                jj_consume_token(CLOSEBRACE);
                          prob.addInitialSet(f,m);
              } else if (jj_2_72(3)) {
                jj_consume_token(OPENBRACE);
                jj_consume_token(AT);
                time = MathForm();
                if (jj_2_67(3)) {
                  p = Predicate();
                                 prob.addInitialAdd(p, time);
                } else if (jj_2_68(3)) {
                  jj_consume_token(OPENBRACE);
                  jj_consume_token(NOT);
                  p = Predicate();
                  jj_consume_token(CLOSEBRACE);
                                                                 prob.addInitialDelete(p, time);
                } else if (jj_2_69(3)) {
                  s = getSet();
                              prob.addInitialSet(s,time);
                } else {
                  jj_consume_token(-1);
                  throw new ParseException();
                }
                jj_consume_token(CLOSEBRACE);
              } else {
                jj_consume_token(-1);
                throw new ParseException();
              }
            }
            jj_consume_token(CLOSEBRACE);
          } else {
            ;
          }
        //System.out.println("Printing from Parser, value of now: " + now);
        prob.initAction.setDuration(now);
        prob.initAction.setCost(new MathForm(cost));
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(CLOSEBRACE);
     {if (true) return prob;}
    } else if (jj_2_81(3)) {
      jj_consume_token(0);
                prob.name = null;
                {if (true) return prob;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static final public void DomainName() throws ParseException {
                     String n;
    jj_consume_token(OPENBRACE);
    jj_consume_token(DOMAIN);
    n = Name();
    jj_consume_token(CLOSEBRACE);
         prob.setDomainName(n);
  }

  static final public void ProblemName() throws ParseException {
    jj_consume_token(OPENBRACE);
    jj_consume_token(PROBLEM);
    prob.name = Name();
    jj_consume_token(CLOSEBRACE);
  }

  static final public void Requirements() throws ParseException {
    Token t;
    prob.requirements = new ArrayList<String>(10);
    jj_consume_token(OPENBRACE);
    jj_consume_token(REQUIREMENTS);
    label_8:
    while (true) {
      if (jj_2_82(3)) {
        ;
      } else {
        break label_8;
      }
      t = jj_consume_token(REQUIREMENT);
                           prob.requirements.add(t.image);
    }
    jj_consume_token(CLOSEBRACE);
  }

  static final public Type Type() throws ParseException {
        Type type;
        String n;
        ArrayList<Type> types;
        StringBuilder buf;
    if (jj_2_84(3)) {
      n = Name();
                     type = scope.putType(new Type(n));
    } else if (jj_2_85(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(EITHER);
                        buf = new StringBuilder(50);
                        types = new ArrayList<Type>();
      label_9:
      while (true) {
        n = Name();
                                types.add(scope.putType(new Type(n)));
                                buf.append('*').append(n);
        if (jj_2_83(3)) {
          ;
        } else {
          break label_9;
        }
      }
      jj_consume_token(CLOSEBRACE);
                        if (types.size() == 0)
                                type = prob.obj;
                        else if (types.size() == 1)
                                type = types.get(0);
                        else {
                                type = prob.putType(new Type(buf.toString()));
                                type.subTypes.addAll(types);
                        }
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
         {if (true) return type;}
    throw new Error("Missing return statement in function");
  }

  static final public void Types() throws ParseException {
        Type t;
        ArrayList<Type> temp = new ArrayList<Type>();
        Type type=prob.obj;
    label_10:
    while (true) {
      if (jj_2_86(3)) {
        ;
      } else {
        break label_10;
      }
      label_11:
      while (true) {
        t = Type();
                             temp.add(t);
        if (jj_2_87(3)) {
          ;
        } else {
          break label_11;
        }
      }
      if (jj_2_88(3)) {
        jj_consume_token(MINUS);
        type = Type();
      } else {
        ;
      }
//			type.subTypes.addAll(temp);
                        type.addAll(temp);
                        temp.clear();
                        type=prob.obj;
    }
  }

// For supporting ! cut operator rules

/*ArrayList<Symbol<String>> UniTypedList() : {
	Symbol<String> arg;
	ArrayList<Symbol<String>> temp = new ArrayList<Symbol<String>>();
	ArrayList<Symbol<String>> args = new ArrayList<Symbol<String>>();	
	Type type=prob.obj;
} {
	(
		(  arg=UniSymbol() {temp.add(arg);}  )+
		(  <MINUS> type=Type()  )?   { 
			type.addAll(temp);
			args.addAll(temp);
			temp.clear(); 
			type=prob.obj; 
		}
	)*
	{return args;}
}*/
  static final public ArrayList<Symbol<String>> TypedList() throws ParseException {
        Symbol<String> arg;
        ArrayList<Symbol<String>> temp = new ArrayList<Symbol<String>>();
        ArrayList<Symbol<String>> args = new ArrayList<Symbol<String>>();
        Type type=prob.obj;
    label_12:
    while (true) {
      if (jj_2_89(3)) {
        ;
      } else {
        break label_12;
      }
      label_13:
      while (true) {
        arg = Symbol();
                                 temp.add(arg);
        if (jj_2_90(3)) {
          ;
        } else {
          break label_13;
        }
      }
      if (jj_2_91(3)) {
        jj_consume_token(MINUS);
        type = Type();
      } else {
        ;
      }
                        type.addAll(temp);
                        args.addAll(temp);
                        temp.clear();
                        type=prob.obj;
    }
         {if (true) return args;}
    throw new Error("Missing return statement in function");
  }

  static final public Term Term() throws ParseException {
        Term term;
        ArrayList<Symbol<String>> args;
    term = singletonTerm();
    args = TypedList();
                term.addAll(args);
                {if (true) return term;}
    throw new Error("Missing return statement in function");
  }

  static final public Term singletonTerm() throws ParseException {
                        String n;
    n = Name();
                  {if (true) return new Term(n);}
    throw new Error("Missing return statement in function");
  }

  static final public Predicate Predicate() throws ParseException {
        Term t;
        Predicate p;
    jj_consume_token(OPENBRACE);
    t = Term();
    jj_consume_token(CLOSEBRACE);
     scope.putPredicate(p = new Predicate(t)); {if (true) return p;}
    throw new Error("Missing return statement in function");
  }

  static final public Function Function() throws ParseException {
        Term t;
        Function f;
    jj_consume_token(OPENBRACE);
    t = Term();
    jj_consume_token(CLOSEBRACE);
          scope.putFunction(f = new Function(t)); {if (true) return f;}
    throw new Error("Missing return statement in function");
  }

// grrr.... zenotravel
  static final public Function BrokenFunction() throws ParseException {
                             Term t; Function f;
    t = singletonTerm();
                            scope.putFunction(f = new Function(t)); {if (true) return f;}
    throw new Error("Missing return statement in function");
  }

  static final public void PredicateList() throws ParseException {
    label_14:
    while (true) {
      if (jj_2_92(3)) {
        ;
      } else {
        break label_14;
      }
      Predicate();
    }
  }

  static final public void FunctionList() throws ParseException {
    label_15:
    while (true) {
      if (jj_2_93(3)) {
        ;
      } else {
        break label_15;
      }
      Function();
    }
  }

  static final public void ActionList() throws ParseException {
    label_16:
    while (true) {
      if (jj_2_94(3)) {
        ;
      } else {
        break label_16;
      }
      Action();
    }
  }

  static final public void Action() throws ParseException {
    jj_consume_token(OPENBRACE);
    if (jj_2_95(3)) {
      jj_consume_token(ACTION);
      InstantAct();
    } else if (jj_2_96(3)) {
      jj_consume_token(DURATIVE_ACTION);
      DurativeAct();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(CLOSEBRACE);
  }

  static final public void Condition() throws ParseException {
                     MathForm time; LiftedTest te; Predicate p;
    if (jj_2_106(3)) {
      ObjEqualityCheck();
    } else if (jj_2_107(3)) {
      jj_consume_token(OPENBRACE);
      if (jj_2_104(3)) {
        jj_consume_token(AT);
        if (jj_2_97(3)) {
          jj_consume_token(START);
                           time = MathForm.zero;
        } else if (jj_2_98(3)) {
          jj_consume_token(END);
                         time = MathForm.dur;
        } else if (jj_2_99(3)) {
          time = MathForm();
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        if (jj_2_100(3)) {
          te = getTest();
                                act.putTest(te, time);
        } else if (jj_2_101(3)) {
          p = Predicate();
                                 act.putCondition(p, time);
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      } else if (jj_2_105(3)) {
        jj_consume_token(OVER);
        jj_consume_token(ALL);
        if (jj_2_102(3)) {
          te = getTest();
                                act.putTest(te, MathForm.zero);
        } else if (jj_2_103(3)) {
          p = Predicate();
                                 act.putProtectCondition(p);
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void AllConditions() throws ParseException {
    if (jj_2_110(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AND);
      label_17:
      while (true) {
        if (jj_2_108(3)) {
          ;
        } else {
          break label_17;
        }
        Condition();
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      if (jj_2_109(3)) {
        Condition();
      } else {
        ;
      }
    }
  }

  static final public void Effect() throws ParseException {
                 MathForm time; LiftedSet se; Predicate p;
    jj_consume_token(OPENBRACE);
    jj_consume_token(AT);
    if (jj_2_111(3)) {
      jj_consume_token(START);
                           time = MathForm.zero;
    } else if (jj_2_112(3)) {
      jj_consume_token(END);
                         time = MathForm.dur;
    } else if (jj_2_113(3)) {
      time = MathForm();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    if (jj_2_114(3)) {
      se = getSet();
                                act.putSet(se,time);
    } else if (jj_2_115(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(NOT);
      p = Predicate();
      jj_consume_token(CLOSEBRACE);
                                                                act.putDelete(p,time);
    } else if (jj_2_116(3)) {
      p = Predicate();
                                    act.putAdd(p,time);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(CLOSEBRACE);
  }

  static final public void AllEffects() throws ParseException {
    if (jj_2_119(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AND);
      label_18:
      while (true) {
        if (jj_2_117(3)) {
          ;
        } else {
          break label_18;
        }
        Effect();
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      if (jj_2_118(3)) {
        Effect();
      } else {
        ;
      }
    }
  }

  static final public Action DurativeAct() throws ParseException {
    String n;
    MathForm mf;
    Predicate p;
    LiftedTest te;
    LiftedSet se;
    MathForm time;
    n = Name();
        scope = act = scope.putAction(new Action(n));
        act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon = true;
    if (jj_2_120(3)) {
      jj_consume_token(PARAMETERS);
      jj_consume_token(OPENBRACE);
      TypedList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_121(3)) {
      jj_consume_token(DURATION);
      jj_consume_token(OPENBRACE);
      jj_consume_token(EQUAL);
      jj_consume_token(DURATION_VAR);
      mf = MathForm();
         act.setDuration(mf);
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_122(3)) {
      jj_consume_token(COST);
      mf = MathForm();
                           act.setCost(mf);
    } else {
      ;
    }
    jj_consume_token(CONDITION);
    AllConditions();
         act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon= false;
    jj_consume_token(EFFECT);
    AllEffects();
      scope = act.outerScope; {if (true) return act;}
    throw new Error("Missing return statement in function");
  }

  static final public void ICondition() throws ParseException {
                      LiftedTest te; Predicate p;
    if (jj_2_123(3)) {
      ObjEqualityCheck();
    } else if (jj_2_124(3)) {
      te = getTest();
                        act.putTest(te);
    } else if (jj_2_125(3)) {
      p = Predicate();
                         act.putCondition(p);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void AllIConditions() throws ParseException {
    if (jj_2_128(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AND);
      label_19:
      while (true) {
        if (jj_2_126(3)) {
          ;
        } else {
          break label_19;
        }
        ICondition();
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      if (jj_2_127(3)) {
        ICondition();
      } else {
        ;
      }
    }
  }

  static final public void IEffect() throws ParseException {
                  LiftedSet se; Predicate p;
    if (jj_2_129(3)) {
      se = getSet();
                    act.putSet(se);
    } else if (jj_2_130(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(NOT);
      p = Predicate();
      jj_consume_token(CLOSEBRACE);
                                                        act.putDelete(p);
    } else if (jj_2_131(3)) {
      p = Predicate();
                            act.putAdd(p);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void AllIEffects() throws ParseException {
    if (jj_2_134(3)) {
      jj_consume_token(OPENBRACE);
      jj_consume_token(AND);
      label_20:
      while (true) {
        if (jj_2_132(3)) {
          ;
        } else {
          break label_20;
        }
        IEffect();
      }
      jj_consume_token(CLOSEBRACE);
    } else {
      if (jj_2_133(3)) {
        IEffect();
      } else {
        ;
      }
    }
  }

/*** Instantaneous Actions **/
  static final public Action InstantAct() throws ParseException {
    String n;
    MathForm m;
    n = Name();
               scope = act = scope.putAction(new Action(n));
                        act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon = true;
    if (jj_2_135(3)) {
      jj_consume_token(PARAMETERS);
      jj_consume_token(OPENBRACE);
      TypedList();
      jj_consume_token(CLOSEBRACE);
    } else {
      ;
    }
    if (jj_2_136(3)) {
      jj_consume_token(COST);
      m = MathForm();
                          act.setCost(m);
    } else {
      ;
    }
    jj_consume_token(PRECONDITION);
    AllIConditions();
         act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon = false;
    jj_consume_token(EFFECT);
    AllIEffects();
      scope = act.outerScope; {if (true) return act;}
    throw new Error("Missing return statement in function");
  }

  static final public String Comparison() throws ParseException {
                       Token t;
    if (jj_2_137(3)) {
      t = jj_consume_token(COMPARISON);
                          {if (true) return t.image;}
    } else if (jj_2_138(3)) {
      t = jj_consume_token(EQUAL);
                     {if (true) return "==";}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static final public String Assignment() throws ParseException {
                       Token t;
    if (jj_2_139(3)) {
      t = jj_consume_token(ASSIGN);
                      {if (true) return "=";}
    } else if (jj_2_140(3)) {
      t = jj_consume_token(EQUAL);
                     {if (true) return "=";}
    } else if (jj_2_141(3)) {
      jj_consume_token(INCREASE);
                      {if (true) return "+=";}
    } else if (jj_2_142(3)) {
      jj_consume_token(DECREASE);
                      {if (true) return "-=";}
    } else if (jj_2_143(3)) {
      jj_consume_token(SCALEUP);
                     {if (true) return "*=";}
    } else if (jj_2_144(3)) {
      jj_consume_token(SCALEDOWN);
                       {if (true) return "/=";}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static final public char Operator() throws ParseException {
                   Token t;
    if (jj_2_145(3)) {
      t = jj_consume_token(PLUS);
    } else if (jj_2_146(3)) {
      t = jj_consume_token(MINUS);
    } else if (jj_2_147(3)) {
      t = jj_consume_token(MUL);
    } else if (jj_2_148(3)) {
      t = jj_consume_token(DIVIDE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return t.image.charAt(0);}
    throw new Error("Missing return statement in function");
  }

  static final public LiftedTest getTest() throws ParseException {
    String op;
    MathForm l;
    MathForm r;
    jj_consume_token(OPENBRACE);
    op = Comparison();
    l = MathForm();
    r = MathForm();
    jj_consume_token(CLOSEBRACE);
         {if (true) return new LiftedTest(op,l,r);}
    throw new Error("Missing return statement in function");
  }

  static final public LiftedSet getSet() throws ParseException {
    String op;
    Function f;
    MathForm r;
    jj_consume_token(OPENBRACE);
    op = Assignment();
    if (jj_2_149(3)) {
      f = Function();
    } else if (jj_2_150(3)) {
      f = BrokenFunction();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    r = MathForm();
    jj_consume_token(CLOSEBRACE);
          {if (true) return new LiftedSet(op,f,r);}
    throw new Error("Missing return statement in function");
  }

// shouldn't the second clause use parentheses?
  static final public MathForm MathForm() throws ParseException {
    char op;
    MathForm mf;
    Function f;
    MathForm l, r;
    boolean track = act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon;
    act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon = true;
    if (jj_2_151(3)) {
      mf = PrimaryMF();
                act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon=track;
                {if (true) return mf;}
    } else if (jj_2_152(3)) {
      op = Operator();
      l = MathForm();
      r = MathForm();
        act.inTheMidstOfDeclaringThingsThatThisActionConditionsUpon=track;
        {if (true) return new MathForm(op,l,r);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static final public MathForm PrimaryMF() throws ParseException {
    MathForm m;
    Function f;
    float v;
    if (jj_2_153(3)) {
      v = Number();
                       {if (true) return new MathForm(v);}
    } else if (jj_2_154(3)) {
      f = Function();
                         {if (true) return new MathForm(f);}
    } else if (jj_2_155(3)) {
      jj_consume_token(OPENBRACE);
      m = MathForm();
      jj_consume_token(CLOSEBRACE);
                                                  {if (true) return m;}
    } else if (jj_2_156(3)) {
      jj_consume_token(DURATION_VAR);
                           {if (true) return MathForm.dur;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static final public void ObjEqualityCheck() throws ParseException {
    jj_consume_token(OPENBRACE);
    jj_consume_token(NOT);
    jj_consume_token(OPENBRACE);
    jj_consume_token(EQUAL);
    label_21:
    while (true) {
      jj_consume_token(VAR);
      if (jj_2_157(3)) {
        ;
      } else {
        break label_21;
      }
    }
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(CLOSEBRACE);
  }

  static final public float Number() throws ParseException {
                   Token t;
    t = jj_consume_token(A_NUMBER);
                      {if (true) return Float.valueOf(t.image);}
    throw new Error("Missing return statement in function");
  }

  static final public String Name() throws ParseException {
                 Token t;
    if (jj_2_158(3)) {
      t = jj_consume_token(NAME);
    } else if (jj_2_159(3)) {
      t = jj_consume_token(AT);
    } else if (jj_2_160(3)) {
      t = jj_consume_token(VAR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
         {if (true) return t.image.toLowerCase();}
    throw new Error("Missing return statement in function");
  }

/*Symbol<String> UniSymbol() : {Token t;} {
	(t=<NAME> | t=<AT>) {
		return scope.putConstant(new Constant(token.image.toLowerCase()));
	}
|	(t=<VAR>) {
		return scope.putVariable(new Variable(token.image.toLowerCase()));
	}
|	(t=<CUTVAR>) {
		return scope.putVariable(new Variable(token.image.toLowerCase(), true));
	}
}*/
  static final public Symbol<String> Symbol() throws ParseException {
                           Token t;
    if (jj_2_163(3)) {
      if (jj_2_161(3)) {
        t = jj_consume_token(NAME);
      } else if (jj_2_162(3)) {
        t = jj_consume_token(AT);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
                {if (true) return scope.putConstant(new Constant(token.image.toLowerCase()));}
    } else if (jj_2_164(3)) {
      t = jj_consume_token(VAR);
                {if (true) return scope.putVariable(new Variable(token.image.toLowerCase()));}
    } else if (jj_2_165(3)) {
      t = jj_consume_token(CUTVAR);
                //System.out.println("\n Was at cutVar Processing \n");
                {if (true) return scope.putVariable(new Variable(token.image.toLowerCase(), true));}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  static private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  static private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  static private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  static private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  static private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  static private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  static private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  static private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  static private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  static private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  static private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  static private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  static private boolean jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  static private boolean jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  static private boolean jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  static private boolean jj_2_16(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  static private boolean jj_2_17(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  static private boolean jj_2_18(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  static private boolean jj_2_19(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  static private boolean jj_2_20(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  static private boolean jj_2_21(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  static private boolean jj_2_22(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  static private boolean jj_2_23(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  static private boolean jj_2_24(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  static private boolean jj_2_25(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  static private boolean jj_2_26(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  static private boolean jj_2_27(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  static private boolean jj_2_28(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  static private boolean jj_2_29(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  static private boolean jj_2_30(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  static private boolean jj_2_31(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  static private boolean jj_2_32(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  static private boolean jj_2_33(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  static private boolean jj_2_34(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  static private boolean jj_2_35(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  static private boolean jj_2_36(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  static private boolean jj_2_37(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  static private boolean jj_2_38(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  static private boolean jj_2_39(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  static private boolean jj_2_40(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  static private boolean jj_2_41(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  static private boolean jj_2_42(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  static private boolean jj_2_43(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  static private boolean jj_2_44(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  static private boolean jj_2_45(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_45(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  static private boolean jj_2_46(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_46(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  static private boolean jj_2_47(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_47(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  static private boolean jj_2_48(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_48(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  static private boolean jj_2_49(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_49(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  static private boolean jj_2_50(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_50(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  static private boolean jj_2_51(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_51(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  static private boolean jj_2_52(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_52(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  static private boolean jj_2_53(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_53(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  static private boolean jj_2_54(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_54(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  static private boolean jj_2_55(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_55(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  static private boolean jj_2_56(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_56(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  static private boolean jj_2_57(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_57(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  static private boolean jj_2_58(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_58(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  static private boolean jj_2_59(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_59(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  static private boolean jj_2_60(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_60(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  static private boolean jj_2_61(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_61(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  static private boolean jj_2_62(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_62(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  static private boolean jj_2_63(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_63(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  static private boolean jj_2_64(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_64(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  static private boolean jj_2_65(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_65(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  static private boolean jj_2_66(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_66(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  static private boolean jj_2_67(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_67(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  static private boolean jj_2_68(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_68(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  static private boolean jj_2_69(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_69(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  static private boolean jj_2_70(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_70(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  static private boolean jj_2_71(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_71(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  static private boolean jj_2_72(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_72(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(71, xla); }
  }

  static private boolean jj_2_73(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_73(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(72, xla); }
  }

  static private boolean jj_2_74(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_74(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(73, xla); }
  }

  static private boolean jj_2_75(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_75(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(74, xla); }
  }

  static private boolean jj_2_76(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_76(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(75, xla); }
  }

  static private boolean jj_2_77(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_77(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(76, xla); }
  }

  static private boolean jj_2_78(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_78(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(77, xla); }
  }

  static private boolean jj_2_79(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_79(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(78, xla); }
  }

  static private boolean jj_2_80(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_80(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(79, xla); }
  }

  static private boolean jj_2_81(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_81(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(80, xla); }
  }

  static private boolean jj_2_82(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_82(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(81, xla); }
  }

  static private boolean jj_2_83(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_83(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(82, xla); }
  }

  static private boolean jj_2_84(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_84(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(83, xla); }
  }

  static private boolean jj_2_85(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_85(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(84, xla); }
  }

  static private boolean jj_2_86(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_86(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(85, xla); }
  }

  static private boolean jj_2_87(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_87(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(86, xla); }
  }

  static private boolean jj_2_88(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_88(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(87, xla); }
  }

  static private boolean jj_2_89(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_89(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(88, xla); }
  }

  static private boolean jj_2_90(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_90(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(89, xla); }
  }

  static private boolean jj_2_91(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_91(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(90, xla); }
  }

  static private boolean jj_2_92(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_92(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(91, xla); }
  }

  static private boolean jj_2_93(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_93(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(92, xla); }
  }

  static private boolean jj_2_94(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_94(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(93, xla); }
  }

  static private boolean jj_2_95(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_95(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(94, xla); }
  }

  static private boolean jj_2_96(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_96(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(95, xla); }
  }

  static private boolean jj_2_97(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_97(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(96, xla); }
  }

  static private boolean jj_2_98(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_98(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(97, xla); }
  }

  static private boolean jj_2_99(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_99(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(98, xla); }
  }

  static private boolean jj_2_100(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_100(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(99, xla); }
  }

  static private boolean jj_2_101(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_101(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(100, xla); }
  }

  static private boolean jj_2_102(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_102(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(101, xla); }
  }

  static private boolean jj_2_103(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_103(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(102, xla); }
  }

  static private boolean jj_2_104(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_104(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(103, xla); }
  }

  static private boolean jj_2_105(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_105(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(104, xla); }
  }

  static private boolean jj_2_106(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_106(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(105, xla); }
  }

  static private boolean jj_2_107(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_107(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(106, xla); }
  }

  static private boolean jj_2_108(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_108(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(107, xla); }
  }

  static private boolean jj_2_109(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_109(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(108, xla); }
  }

  static private boolean jj_2_110(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_110(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(109, xla); }
  }

  static private boolean jj_2_111(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_111(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(110, xla); }
  }

  static private boolean jj_2_112(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_112(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(111, xla); }
  }

  static private boolean jj_2_113(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_113(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(112, xla); }
  }

  static private boolean jj_2_114(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_114(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(113, xla); }
  }

  static private boolean jj_2_115(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_115(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(114, xla); }
  }

  static private boolean jj_2_116(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_116(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(115, xla); }
  }

  static private boolean jj_2_117(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_117(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(116, xla); }
  }

  static private boolean jj_2_118(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_118(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(117, xla); }
  }

  static private boolean jj_2_119(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_119(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(118, xla); }
  }

  static private boolean jj_2_120(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_120(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(119, xla); }
  }

  static private boolean jj_2_121(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_121(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(120, xla); }
  }

  static private boolean jj_2_122(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_122(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(121, xla); }
  }

  static private boolean jj_2_123(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_123(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(122, xla); }
  }

  static private boolean jj_2_124(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_124(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(123, xla); }
  }

  static private boolean jj_2_125(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_125(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(124, xla); }
  }

  static private boolean jj_2_126(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_126(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(125, xla); }
  }

  static private boolean jj_2_127(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_127(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(126, xla); }
  }

  static private boolean jj_2_128(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_128(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(127, xla); }
  }

  static private boolean jj_2_129(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_129(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(128, xla); }
  }

  static private boolean jj_2_130(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_130(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(129, xla); }
  }

  static private boolean jj_2_131(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_131(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(130, xla); }
  }

  static private boolean jj_2_132(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_132(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(131, xla); }
  }

  static private boolean jj_2_133(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_133(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(132, xla); }
  }

  static private boolean jj_2_134(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_134(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(133, xla); }
  }

  static private boolean jj_2_135(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_135(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(134, xla); }
  }

  static private boolean jj_2_136(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_136(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(135, xla); }
  }

  static private boolean jj_2_137(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_137(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(136, xla); }
  }

  static private boolean jj_2_138(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_138(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(137, xla); }
  }

  static private boolean jj_2_139(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_139(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(138, xla); }
  }

  static private boolean jj_2_140(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_140(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(139, xla); }
  }

  static private boolean jj_2_141(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_141(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(140, xla); }
  }

  static private boolean jj_2_142(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_142(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(141, xla); }
  }

  static private boolean jj_2_143(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_143(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(142, xla); }
  }

  static private boolean jj_2_144(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_144(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(143, xla); }
  }

  static private boolean jj_2_145(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_145(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(144, xla); }
  }

  static private boolean jj_2_146(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_146(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(145, xla); }
  }

  static private boolean jj_2_147(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_147(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(146, xla); }
  }

  static private boolean jj_2_148(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_148(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(147, xla); }
  }

  static private boolean jj_2_149(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_149(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(148, xla); }
  }

  static private boolean jj_2_150(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_150(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(149, xla); }
  }

  static private boolean jj_2_151(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_151(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(150, xla); }
  }

  static private boolean jj_2_152(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_152(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(151, xla); }
  }

  static private boolean jj_2_153(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_153(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(152, xla); }
  }

  static private boolean jj_2_154(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_154(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(153, xla); }
  }

  static private boolean jj_2_155(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_155(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(154, xla); }
  }

  static private boolean jj_2_156(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_156(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(155, xla); }
  }

  static private boolean jj_2_157(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_157(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(156, xla); }
  }

  static private boolean jj_2_158(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_158(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(157, xla); }
  }

  static private boolean jj_2_159(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_159(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(158, xla); }
  }

  static private boolean jj_2_160(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_160(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(159, xla); }
  }

  static private boolean jj_2_161(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_161(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(160, xla); }
  }

  static private boolean jj_2_162(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_162(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(161, xla); }
  }

  static private boolean jj_2_163(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_163(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(162, xla); }
  }

  static private boolean jj_2_164(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_164(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(163, xla); }
  }

  static private boolean jj_2_165(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_165(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(164, xla); }
  }

  static private boolean jj_3_152() {
    if (jj_3R_49()) return true;
    if (jj_3R_30()) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_62() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_55()) {
    jj_scanpos = xsp;
    if (jj_3_56()) return true;
    }
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3_151() {
    if (jj_3R_48()) return true;
    return false;
  }

  static private boolean jj_3R_30() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_151()) {
    jj_scanpos = xsp;
    if (jj_3_152()) return true;
    }
    return false;
  }

  static private boolean jj_3_150() {
    if (jj_3R_47()) return true;
    return false;
  }

  static private boolean jj_3_61() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_60() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_54() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) {
    jj_scanpos = xsp;
    if (jj_3_62()) {
    jj_scanpos = xsp;
    if (jj_3_63()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_34() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_75() {
    if (jj_scan_token(EVENT)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_54()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_42() {
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_80() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(UPDATE)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_53()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_53() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_74()) {
    jj_scanpos = xsp;
    if (jj_3_75()) {
    jj_scanpos = xsp;
    if (jj_3_76()) {
    jj_scanpos = xsp;
    if (jj_3_77()) {
    jj_scanpos = xsp;
    if (jj_3_78()) {
    jj_scanpos = xsp;
    if (jj_3_79()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_74() {
    if (jj_scan_token(OBJECT)) return true;
    if (jj_3R_24()) return true;
    return false;
  }

  static private boolean jj_3_148() {
    if (jj_scan_token(DIVIDE)) return true;
    return false;
  }

  static private boolean jj_3_149() {
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3R_28() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_51()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_149()) {
    jj_scanpos = xsp;
    if (jj_3_150()) return true;
    }
    return false;
  }

  static private boolean jj_3_33() {
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_49() {
    if (jj_scan_token(SOFT)) return true;
    return false;
  }

  static private boolean jj_3_26() {
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_47() {
    if (jj_scan_token(OPENBRACKET)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_42()) {
    jj_scanpos = xsp;
    if (jj_3_43()) return true;
    }
    xsp = jj_scanpos;
    if (jj_3_46()) jj_scanpos = xsp;
    if (jj_scan_token(CLOSEBRACKET)) return true;
    return false;
  }

  static private boolean jj_3_147() {
    if (jj_scan_token(MUL)) return true;
    return false;
  }

  static private boolean jj_3_40() {
    if (jj_scan_token(SOFT)) return true;
    return false;
  }

  static private boolean jj_3_48() {
    if (jj_scan_token(HARD)) return true;
    return false;
  }

  static private boolean jj_3_32() {
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_41() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_52()) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_52() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AT)) return true;
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_39() {
    if (jj_scan_token(HARD)) return true;
    return false;
  }

  static private boolean jj_3_38() {
    if (jj_scan_token(OPENBRACKET)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_33()) {
    jj_scanpos = xsp;
    if (jj_3_34()) return true;
    }
    xsp = jj_scanpos;
    if (jj_3_37()) jj_scanpos = xsp;
    if (jj_scan_token(CLOSEBRACKET)) return true;
    return false;
  }

  static private boolean jj_3_146() {
    if (jj_scan_token(MINUS)) return true;
    return false;
  }

  static private boolean jj_3_50() {
    if (jj_scan_token(MINUS)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_48()) {
    jj_scanpos = xsp;
    if (jj_3_49()) return true;
    }
    return false;
  }

  static private boolean jj_3_41() {
    if (jj_scan_token(MINUS)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3_40()) return true;
    }
    return false;
  }

  static private boolean jj_3_51() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_145() {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  static private boolean jj_3_144() {
    if (jj_scan_token(SCALEDOWN)) return true;
    return false;
  }

  static private boolean jj_3R_49() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_145()) {
    jj_scanpos = xsp;
    if (jj_3_146()) {
    jj_scanpos = xsp;
    if (jj_3_147()) {
    jj_scanpos = xsp;
    if (jj_3_148()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_33() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_51()) {
    jj_scanpos = xsp;
    if (jj_3_52()) return true;
    }
    return false;
  }

  static private boolean jj_3_143() {
    if (jj_scan_token(SCALEUP)) return true;
    return false;
  }

  static private boolean jj_3_142() {
    if (jj_scan_token(DECREASE)) return true;
    return false;
  }

  static private boolean jj_3_141() {
    if (jj_scan_token(INCREASE)) return true;
    return false;
  }

  static private boolean jj_3_140() {
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_139() {
    if (jj_scan_token(ASSIGN)) return true;
    return false;
  }

  static private boolean jj_3R_51() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_139()) {
    jj_scanpos = xsp;
    if (jj_3_140()) {
    jj_scanpos = xsp;
    if (jj_3_141()) {
    jj_scanpos = xsp;
    if (jj_3_142()) {
    jj_scanpos = xsp;
    if (jj_3_143()) {
    jj_scanpos = xsp;
    if (jj_3_144()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_138() {
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_137() {
    if (jj_scan_token(COMPARISON)) return true;
    return false;
  }

  static private boolean jj_3_30() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    return false;
  }

  static private boolean jj_3R_52() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_137()) {
    jj_scanpos = xsp;
    if (jj_3_138()) return true;
    }
    return false;
  }

  static private boolean jj_3_25() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3R_31() {
    if (jj_scan_token(GOAL)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_30()) jj_scanpos = xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_31()) { jj_scanpos = xsp; break; }
    }
    xsp = jj_scanpos;
    if (jj_3_32()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3_31() {
    if (jj_3R_33()) return true;
    return false;
  }

  static private boolean jj_3_132() {
    if (jj_3R_46()) return true;
    return false;
  }

  static private boolean jj_3_21() {
    if (jj_scan_token(MAXIMIZE)) return true;
    return false;
  }

  static private boolean jj_3_136() {
    if (jj_scan_token(COST)) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_126() {
    if (jj_3R_45()) return true;
    return false;
  }

  static private boolean jj_3_135() {
    if (jj_scan_token(PARAMETERS)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_24()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_24() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    return false;
  }

  static private boolean jj_3_28() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_31()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_20() {
    if (jj_scan_token(MINIMIZE)) return true;
    return false;
  }

  static private boolean jj_3_27() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_24()) jj_scanpos = xsp;
    if (jj_3_25()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_25()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_29() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(SENSE)) return true;
    if (jj_3R_24()) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3R_39() {
    if (jj_3R_35()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_135()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_136()) jj_scanpos = xsp;
    if (jj_scan_token(PRECONDITION)) return true;
    return false;
  }

  static private boolean jj_3_23() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(FORALL)) return true;
    if (jj_3R_24()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_29()) jj_scanpos = xsp;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_133() {
    if (jj_3R_46()) return true;
    return false;
  }

  static private boolean jj_3_9() {
    if (jj_scan_token(ASSIGN)) return true;
    return false;
  }

  static private boolean jj_3_134() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_132()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_32() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(OPEN)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_23()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_131() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_130() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_8() {
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_127() {
    if (jj_3R_45()) return true;
    return false;
  }

  static private boolean jj_3_129() {
    if (jj_3R_28()) return true;
    return false;
  }

  static private boolean jj_3_128() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_126()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_46() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_129()) {
    jj_scanpos = xsp;
    if (jj_3_130()) {
    jj_scanpos = xsp;
    if (jj_3_131()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_19() {
    if (jj_3R_32()) return true;
    return false;
  }

  static private boolean jj_3_12() {
    if (jj_3R_28()) return true;
    return false;
  }

  static private boolean jj_3_11() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_10() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_22() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(METRIC)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_20()) {
    jj_scanpos = xsp;
    if (jj_3_21()) return true;
    }
    return false;
  }

  static private boolean jj_3_125() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_16() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AT)) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_124() {
    if (jj_3R_41()) return true;
    return false;
  }

  static private boolean jj_3_15() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) return true;
    }
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3_123() {
    if (jj_3R_42()) return true;
    return false;
  }

  static private boolean jj_3R_45() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_123()) {
    jj_scanpos = xsp;
    if (jj_3_124()) {
    jj_scanpos = xsp;
    if (jj_3_125()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_18() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_31()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_14() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_13() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_7() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3_16()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_117() {
    if (jj_3R_44()) return true;
    return false;
  }

  static private boolean jj_3_122() {
    if (jj_scan_token(COST)) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_121() {
    if (jj_scan_token(DURATION)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_120() {
    if (jj_scan_token(PARAMETERS)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_24()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_17() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(INIT)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_6() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(OBJECT)) return true;
    if (jj_3R_24()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_40() {
    if (jj_3R_35()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_120()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_121()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_122()) jj_scanpos = xsp;
    if (jj_scan_token(CONDITION)) return true;
    return false;
  }

  static private boolean jj_3_108() {
    if (jj_3R_43()) return true;
    return false;
  }

  static private boolean jj_3_116() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_115() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_118() {
    if (jj_3R_44()) return true;
    return false;
  }

  static private boolean jj_3_114() {
    if (jj_3R_28()) return true;
    return false;
  }

  static private boolean jj_3_113() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_119() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_117()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_112() {
    if (jj_scan_token(END)) return true;
    return false;
  }

  static private boolean jj_3_111() {
    if (jj_scan_token(START)) return true;
    return false;
  }

  static private boolean jj_3_109() {
    if (jj_3R_43()) return true;
    return false;
  }

  static private boolean jj_3_103() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_102() {
    if (jj_3R_41()) return true;
    return false;
  }

  static private boolean jj_3_110() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AND)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_108()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_44() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_111()) {
    jj_scanpos = xsp;
    if (jj_3_112()) {
    jj_scanpos = xsp;
    if (jj_3_113()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_105() {
    if (jj_scan_token(OVER)) return true;
    if (jj_scan_token(ALL)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_102()) {
    jj_scanpos = xsp;
    if (jj_3_103()) return true;
    }
    return false;
  }

  static private boolean jj_3_101() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_100() {
    if (jj_3R_41()) return true;
    return false;
  }

  static private boolean jj_3_99() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_98() {
    if (jj_scan_token(END)) return true;
    return false;
  }

  static private boolean jj_3_97() {
    if (jj_scan_token(START)) return true;
    return false;
  }

  static private boolean jj_3_5() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(FUNCTION)) return true;
    if (jj_3R_26()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_4() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(PREDICATES)) return true;
    if (jj_3R_25()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_104() {
    if (jj_scan_token(AT)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_97()) {
    jj_scanpos = xsp;
    if (jj_3_98()) {
    jj_scanpos = xsp;
    if (jj_3_99()) return true;
    }
    }
    xsp = jj_scanpos;
    if (jj_3_100()) {
    jj_scanpos = xsp;
    if (jj_3_101()) return true;
    }
    return false;
  }

  static private boolean jj_3_3() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(CONSTANTS)) return true;
    if (jj_3R_24()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_2() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(TYPES)) return true;
    if (jj_3R_23()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_107() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_104()) {
    jj_scanpos = xsp;
    if (jj_3_105()) return true;
    }
    return false;
  }

  static private boolean jj_3_1() {
    if (jj_3R_22()) return true;
    return false;
  }

  static private boolean jj_3_106() {
    if (jj_3R_42()) return true;
    return false;
  }

  static private boolean jj_3R_43() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_106()) {
    jj_scanpos = xsp;
    if (jj_3_107()) return true;
    }
    return false;
  }

  static private boolean jj_3_96() {
    if (jj_scan_token(DURATIVE_ACTION)) return true;
    if (jj_3R_40()) return true;
    return false;
  }

  static private boolean jj_3_95() {
    if (jj_scan_token(ACTION)) return true;
    if (jj_3R_39()) return true;
    return false;
  }

  static private boolean jj_3R_38() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_95()) {
    jj_scanpos = xsp;
    if (jj_3_96()) return true;
    }
    return false;
  }

  static private boolean jj_3_94() {
    if (jj_3R_38()) return true;
    return false;
  }

  static private boolean jj_3_93() {
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3R_26() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_93()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_92() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3R_47() {
    if (jj_3R_53()) return true;
    return false;
  }

  static private boolean jj_3R_25() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_92()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_29() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_50()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_27() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_50()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3R_53() {
    if (jj_3R_35()) return true;
    return false;
  }

  static private boolean jj_3R_50() {
    if (jj_3R_53()) return true;
    if (jj_3R_24()) return true;
    return false;
  }

  static private boolean jj_3_91() {
    if (jj_scan_token(MINUS)) return true;
    if (jj_3R_36()) return true;
    return false;
  }

  static private boolean jj_3_90() {
    if (jj_3R_37()) return true;
    return false;
  }

  static private boolean jj_3_89() {
    Token xsp;
    if (jj_3_90()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_90()) { jj_scanpos = xsp; break; }
    }
    xsp = jj_scanpos;
    if (jj_3_91()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_24() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_89()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_88() {
    if (jj_scan_token(MINUS)) return true;
    if (jj_3R_36()) return true;
    return false;
  }

  static private boolean jj_3_87() {
    if (jj_3R_36()) return true;
    return false;
  }

  static private boolean jj_3_86() {
    Token xsp;
    if (jj_3_87()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_87()) { jj_scanpos = xsp; break; }
    }
    xsp = jj_scanpos;
    if (jj_3_88()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_23() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_86()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_83() {
    if (jj_3R_35()) return true;
    return false;
  }

  static private boolean jj_3_85() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(EITHER)) return true;
    Token xsp;
    if (jj_3_83()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_83()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_84() {
    if (jj_3R_35()) return true;
    return false;
  }

  static private boolean jj_3R_36() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_84()) {
    jj_scanpos = xsp;
    if (jj_3_85()) return true;
    }
    return false;
  }

  static private boolean jj_3_162() {
    if (jj_scan_token(AT)) return true;
    return false;
  }

  static private boolean jj_3_165() {
    if (jj_scan_token(CUTVAR)) return true;
    return false;
  }

  static private boolean jj_3_160() {
    if (jj_scan_token(VAR)) return true;
    return false;
  }

  static private boolean jj_3_164() {
    if (jj_scan_token(VAR)) return true;
    return false;
  }

  static private boolean jj_3_82() {
    if (jj_scan_token(REQUIREMENT)) return true;
    return false;
  }

  static private boolean jj_3_161() {
    if (jj_scan_token(NAME)) return true;
    return false;
  }

  static private boolean jj_3R_37() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_163()) {
    jj_scanpos = xsp;
    if (jj_3_164()) {
    jj_scanpos = xsp;
    if (jj_3_165()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_163() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_161()) {
    jj_scanpos = xsp;
    if (jj_3_162()) return true;
    }
    return false;
  }

  static private boolean jj_3_45() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3R_22() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(REQUIREMENTS)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_82()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_159() {
    if (jj_scan_token(AT)) return true;
    return false;
  }

  static private boolean jj_3_66() {
    if (jj_scan_token(ASSIGN)) return true;
    return false;
  }

  static private boolean jj_3_36() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_158() {
    if (jj_scan_token(NAME)) return true;
    return false;
  }

  static private boolean jj_3R_35() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_158()) {
    jj_scanpos = xsp;
    if (jj_3_159()) {
    jj_scanpos = xsp;
    if (jj_3_160()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_65() {
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_44() {
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3R_34() {
    if (jj_scan_token(A_NUMBER)) return true;
    return false;
  }

  static private boolean jj_3_157() {
    if (jj_scan_token(VAR)) return true;
    return false;
  }

  static private boolean jj_3_81() {
    if (jj_scan_token(0)) return true;
    return false;
  }

  static private boolean jj_3_69() {
    if (jj_3R_28()) return true;
    return false;
  }

  static private boolean jj_3_68() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_67() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_56() {
    if (jj_scan_token(ASSIGN)) return true;
    return false;
  }

  static private boolean jj_3_46() {
    if (jj_scan_token(COMMA)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_44()) {
    jj_scanpos = xsp;
    if (jj_3_45()) return true;
    }
    return false;
  }

  static private boolean jj_3_72() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AT)) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3R_42() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    return false;
  }

  static private boolean jj_3_71() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_65()) {
    jj_scanpos = xsp;
    if (jj_3_66()) return true;
    }
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3_35() {
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_156() {
    if (jj_scan_token(DURATION_VAR)) return true;
    return false;
  }

  static private boolean jj_3_155() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_30()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_154() {
    if (jj_3R_29()) return true;
    return false;
  }

  static private boolean jj_3_153() {
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_70() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_64() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_70()) {
    jj_scanpos = xsp;
    if (jj_3_71()) {
    jj_scanpos = xsp;
    if (jj_3_72()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_79() {
    if (jj_scan_token(NOW)) return true;
    if (jj_3R_34()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_73()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_48() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_153()) {
    jj_scanpos = xsp;
    if (jj_3_154()) {
    jj_scanpos = xsp;
    if (jj_3_155()) {
    jj_scanpos = xsp;
    if (jj_3_156()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_55() {
    if (jj_scan_token(EQUAL)) return true;
    return false;
  }

  static private boolean jj_3_73() {
    if (jj_scan_token(OPENBRACE)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_64()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  static private boolean jj_3_37() {
    if (jj_scan_token(COMMA)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_35()) {
    jj_scanpos = xsp;
    if (jj_3_36()) return true;
    }
    return false;
  }

  static private boolean jj_3_77() {
    if (jj_3R_32()) return true;
    return false;
  }

  static private boolean jj_3_59() {
    if (jj_3R_28()) return true;
    return false;
  }

  static private boolean jj_3_78() {
    if (jj_scan_token(COST)) return true;
    if (jj_3R_34()) return true;
    return false;
  }

  static private boolean jj_3_58() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_43() {
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_57() {
    if (jj_3R_27()) return true;
    return false;
  }

  static private boolean jj_3_63() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_scan_token(AT)) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  static private boolean jj_3_76() {
    if (jj_3R_31()) return true;
    return false;
  }

  static private boolean jj_initialized_once = false;
  /** Generated Token Manager. */
  static public PDDL21ParserTokenManager token_source;
  static SimpleCharStream jj_input_stream;
  /** Current token. */
  static public Token token;
  /** Next token. */
  static public Token jj_nt;
  static private int jj_ntk;
  static private Token jj_scanpos, jj_lastpos;
  static private int jj_la;
  static private int jj_gen;
  static final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {};
   }
  static final private JJCalls[] jj_2_rtns = new JJCalls[165];
  static private boolean jj_rescan = false;
  static private int jj_gc = 0;

  /** Constructor with InputStream. */
  public PDDL21Parser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public PDDL21Parser(java.io.InputStream stream, String encoding) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser.  ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new PDDL21ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public PDDL21Parser(java.io.Reader stream) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser. ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new PDDL21ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public PDDL21Parser(PDDL21ParserTokenManager tm) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser. ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(PDDL21ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  static private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  static final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  static private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  static final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  static final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  static private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  static private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  static private int[] jj_expentry;
  static private int jj_kind = -1;
  static private int[] jj_lasttokens = new int[100];
  static private int jj_endpos;

  static private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  static public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[78];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 0; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 78; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  static final public void enable_tracing() {
  }

  /** Disable tracing. */
  static final public void disable_tracing() {
  }

  static private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 165; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
            case 44: jj_3_45(); break;
            case 45: jj_3_46(); break;
            case 46: jj_3_47(); break;
            case 47: jj_3_48(); break;
            case 48: jj_3_49(); break;
            case 49: jj_3_50(); break;
            case 50: jj_3_51(); break;
            case 51: jj_3_52(); break;
            case 52: jj_3_53(); break;
            case 53: jj_3_54(); break;
            case 54: jj_3_55(); break;
            case 55: jj_3_56(); break;
            case 56: jj_3_57(); break;
            case 57: jj_3_58(); break;
            case 58: jj_3_59(); break;
            case 59: jj_3_60(); break;
            case 60: jj_3_61(); break;
            case 61: jj_3_62(); break;
            case 62: jj_3_63(); break;
            case 63: jj_3_64(); break;
            case 64: jj_3_65(); break;
            case 65: jj_3_66(); break;
            case 66: jj_3_67(); break;
            case 67: jj_3_68(); break;
            case 68: jj_3_69(); break;
            case 69: jj_3_70(); break;
            case 70: jj_3_71(); break;
            case 71: jj_3_72(); break;
            case 72: jj_3_73(); break;
            case 73: jj_3_74(); break;
            case 74: jj_3_75(); break;
            case 75: jj_3_76(); break;
            case 76: jj_3_77(); break;
            case 77: jj_3_78(); break;
            case 78: jj_3_79(); break;
            case 79: jj_3_80(); break;
            case 80: jj_3_81(); break;
            case 81: jj_3_82(); break;
            case 82: jj_3_83(); break;
            case 83: jj_3_84(); break;
            case 84: jj_3_85(); break;
            case 85: jj_3_86(); break;
            case 86: jj_3_87(); break;
            case 87: jj_3_88(); break;
            case 88: jj_3_89(); break;
            case 89: jj_3_90(); break;
            case 90: jj_3_91(); break;
            case 91: jj_3_92(); break;
            case 92: jj_3_93(); break;
            case 93: jj_3_94(); break;
            case 94: jj_3_95(); break;
            case 95: jj_3_96(); break;
            case 96: jj_3_97(); break;
            case 97: jj_3_98(); break;
            case 98: jj_3_99(); break;
            case 99: jj_3_100(); break;
            case 100: jj_3_101(); break;
            case 101: jj_3_102(); break;
            case 102: jj_3_103(); break;
            case 103: jj_3_104(); break;
            case 104: jj_3_105(); break;
            case 105: jj_3_106(); break;
            case 106: jj_3_107(); break;
            case 107: jj_3_108(); break;
            case 108: jj_3_109(); break;
            case 109: jj_3_110(); break;
            case 110: jj_3_111(); break;
            case 111: jj_3_112(); break;
            case 112: jj_3_113(); break;
            case 113: jj_3_114(); break;
            case 114: jj_3_115(); break;
            case 115: jj_3_116(); break;
            case 116: jj_3_117(); break;
            case 117: jj_3_118(); break;
            case 118: jj_3_119(); break;
            case 119: jj_3_120(); break;
            case 120: jj_3_121(); break;
            case 121: jj_3_122(); break;
            case 122: jj_3_123(); break;
            case 123: jj_3_124(); break;
            case 124: jj_3_125(); break;
            case 125: jj_3_126(); break;
            case 126: jj_3_127(); break;
            case 127: jj_3_128(); break;
            case 128: jj_3_129(); break;
            case 129: jj_3_130(); break;
            case 130: jj_3_131(); break;
            case 131: jj_3_132(); break;
            case 132: jj_3_133(); break;
            case 133: jj_3_134(); break;
            case 134: jj_3_135(); break;
            case 135: jj_3_136(); break;
            case 136: jj_3_137(); break;
            case 137: jj_3_138(); break;
            case 138: jj_3_139(); break;
            case 139: jj_3_140(); break;
            case 140: jj_3_141(); break;
            case 141: jj_3_142(); break;
            case 142: jj_3_143(); break;
            case 143: jj_3_144(); break;
            case 144: jj_3_145(); break;
            case 145: jj_3_146(); break;
            case 146: jj_3_147(); break;
            case 147: jj_3_148(); break;
            case 148: jj_3_149(); break;
            case 149: jj_3_150(); break;
            case 150: jj_3_151(); break;
            case 151: jj_3_152(); break;
            case 152: jj_3_153(); break;
            case 153: jj_3_154(); break;
            case 154: jj_3_155(); break;
            case 155: jj_3_156(); break;
            case 156: jj_3_157(); break;
            case 157: jj_3_158(); break;
            case 158: jj_3_159(); break;
            case 159: jj_3_160(); break;
            case 160: jj_3_161(); break;
            case 161: jj_3_162(); break;
            case 162: jj_3_163(); break;
            case 163: jj_3_164(); break;
            case 164: jj_3_165(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  static private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
